import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import java.util.List;

@Repository
public interface AccountRepository extends JpaRepository<AccountNew, Long> {

    // Option 1: Fetch limited accounts using native query (Oracle)
    @Query(value = "SELECT a.account_id FROM account_new a " +
                   "WHERE a.customer_id = :customerId " +
                   "AND a.account_type = :accountType " +
                   "AND ROWNUM <= :limit", nativeQuery = true)
    List<Long> findAccountIdsNative(
        @Param("customerId") Long customerId,
        @Param("accountType") String accountType,
        @Param("limit") int limit
    );

    // Option 2: Fetch latest status using JPQL
    @Query("SELECT a FROM AccountNew a " +
           "WHERE a.customerId = :customerId " +
           "AND a.accountType = :accountType " +
           "ORDER BY a.lastUpdated DESC")
    List<AccountNew> findLatestStatus(
        @Param("customerId") Long customerId,
        @Param("accountType") String accountType
    );
}
